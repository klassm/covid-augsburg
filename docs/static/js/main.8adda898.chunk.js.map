{"version":3,"sources":["facade/fetchData.ts","facade/RegionStorage.ts","administerRegions/AdministerRegionsDialog.tsx","topBar/TopBar.tsx","region/Region.tsx","region/RegionList.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["baseUrl","useAvailableRegions","useQuery","fetchAvailableRegions","a","axios","get","response","data","fetchRegion","rs","cookieKey","defaultRegions","userRegionsQueryKey","useUserRegions","getUserRegions","saveRegions","cookies","set","JSON","stringify","sameSite","expires","cookieValue","parse","useStyles","makeStyles","theme","appBar","position","title","marginLeft","spacing","flex","AdministerRegionsDialog","onClose","classes","regions","userRegions","removeRegion","queryClient","useQueryClient","useMutation","toRemove","filter","onSettled","invalidateQueries","useRemoveRegion","mutateAsync","Dialog","fullScreen","open","AppBar","className","Toolbar","IconButton","edge","color","onClick","aria-label","Typography","variant","LinearProgress","indexedRegions","keyBy","region","listItems","map","item","ListItem","ListItemText","primary","name","ListItemSecondaryAction","List","dense","renderList","root","flexGrow","menuButton","marginRight","display","breakpoints","up","search","borderRadius","shape","backgroundColor","fade","palette","common","white","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","TopBar","showAdministerDialog","addRegion","uniq","useAddRegion","useState","query","setQuery","loadedRegions","onSelectRegion","noWrap","Autocomplete","id","style","inputValue","disableListWrap","getOptionLabel","option","options","clearOnBlur","onChange","_event","value","renderInput","params","InputLabelProps","InputProps","rest","InputBase","placeholder","e","target","input","renderOption","createStyles","body","colors","Region","regionData","useRegion","screenWidth","window","innerWidth","entries","slice","length","day","date","split","join","graphData","x","y","incidence","casesLabelsData","label","diff","casesDiff","undefined","Math","abs","incidenceLabelsData","ceil","xType","colorType","barWidth","colorRange","colorDomain","labelAnchorX","RegionList","availableRegions","savedRegions","CircularProgress","some","QueryClient","margin","marginTop","footer","fontSize","App","setShowAdministerDialog","QueryClientProvider","client","href","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","waiting","postMessage","type"],"mappings":"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","file":"static/js/main.8adda898.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { useQuery } from \"react-query\";\n\nconst baseUrl = \"https://raw.githubusercontent.com/klassm/covid-historie/master/rki-scrape/data\"\n\nexport interface DayData {\n  date: string;\n  incidence: number;\n  cases: number;\n  casesDiff: number;\n}\n\nexport interface Region {\n  rs: string;\n  name: string;\n}\n\nexport interface RegionWithData extends Region {\n  entries: DayData[]\n}\n\n\nexport function useAvailableRegions() {\n  return useQuery(\"available-regions\", fetchAvailableRegions)\n}\n\nexport async function fetchAvailableRegions(): Promise<Region[]> {\n  const response = await axios.get(`${baseUrl}/regions.json`)\n  return response.data;\n}\n\nexport function useRegion(rs: string) {\n  return useQuery([rs, \"region\"], async () => fetchRegion(rs))\n}\n\nexport async function fetchRegion(rs: string): Promise<RegionWithData> {\n  const response = await axios.get(`${baseUrl}/${rs}.json`)\n  return response.data;\n}\n","import cookies from 'js-cookie';\nimport { uniq } from 'lodash';\nimport { useMutation, useQuery, UseMutationResult } from \"react-query\";\nimport { useQueryClient } from 'react-query';\n\nconst cookieKey = 'regions';\nconst defaultRegions = ['09761', '09772'];\nconst userRegionsQueryKey = \"user-regions\";\n\nexport function useUserRegions() {\n  return useQuery(userRegionsQueryKey, getUserRegions)\n}\n\nfunction saveRegions(rs: string[]) {\n  cookies.set(cookieKey, JSON.stringify(rs), { sameSite: 'lax', expires: 3650 });\n}\n\nexport function useAddRegion(): UseMutationResult<void, unknown, { rs: string }> {\n  const queryClient = useQueryClient()\n\n  return useMutation<void, unknown, { rs: string }>(async ({ rs }) => {\n    const regions: string[] = uniq([...getUserRegions(), rs]);\n    await saveRegions(regions);\n  }, {\n    onSettled: () => queryClient.invalidateQueries(userRegionsQueryKey)\n  })\n}\n\nexport function useRemoveRegion(): UseMutationResult<void, unknown, { rs: string }> {\n  const queryClient = useQueryClient()\n  return useMutation<void, unknown, { rs: string }>(async ({ rs: toRemove }) => {\n    const newRegions = getUserRegions().filter(rs => toRemove !== rs);\n    saveRegions(newRegions);\n  }, {\n    onSettled: () => queryClient.invalidateQueries(userRegionsQueryKey)\n  })\n}\n\nfunction getUserRegions(): string[] {\n  const cookieValue = cookies.get(cookieKey);\n  if (!cookieValue) {\n    return defaultRegions;\n  }\n  return JSON.parse(cookieValue) as string[];\n}\n","import {\n  AppBar,\n  Dialog, IconButton, LinearProgress,\n  List,\n  ListItem, ListItemSecondaryAction,\n  ListItemText,\n  makeStyles,\n  Toolbar,\n  Typography\n} from \"@material-ui/core\";\nimport { FunctionComponent } from \"react\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useAvailableRegions } from \"../facade/fetchData\";\nimport { useRemoveRegion, useUserRegions } from \"../facade/RegionStorage\";\nimport { keyBy } from \"lodash\";\nimport DeleteIcon from '@material-ui/icons/Delete';\n\ninterface Props {\n  onClose: () => void\n}\n\nconst useStyles = makeStyles((theme) => ( {\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n} ));\n\nexport const AdministerRegionsDialog: FunctionComponent<Props> = ({ onClose }) => {\n  const classes = useStyles();\n  const { data: regions } = useAvailableRegions()\n  const { data: userRegions } = useUserRegions();\n  const { mutateAsync: removeRegion } = useRemoveRegion();\n\n  function renderList() {\n    if (!regions || !userRegions) {\n      return <LinearProgress/>\n    }\n\n    const indexedRegions = keyBy(regions, region => region.rs);\n    const toRender = userRegions.map(rs => indexedRegions[rs]);\n    const listItems = toRender.map(item => (\n      <ListItem>\n        <ListItemText\n          primary={item.name}\n        />\n        <ListItemSecondaryAction>\n          <IconButton edge=\"end\" aria-label=\"delete\" onClick={async () => removeRegion({ rs: item.rs })}>\n            <DeleteIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    ));\n\n    return <List dense={true}>\n      {listItems}\n    </List>\n  }\n\n  return <Dialog fullScreen open={ true } onClose={ onClose }>\n    <AppBar className={ classes.appBar }>\n      <Toolbar>\n        <IconButton edge=\"start\" color=\"inherit\" onClick={ onClose } aria-label=\"close\">\n          <CloseIcon/>\n        </IconButton>\n        <Typography variant=\"h6\" className={ classes.title }>\n          Kreise verwalten\n        </Typography>\n      </Toolbar>\n    </AppBar>\n    {renderList()}\n  </Dialog>\n}\n","import { AppBar, fade, IconButton, InputBase, makeStyles, TextField, Toolbar, Typography } from \"@material-ui/core\";\nimport { FunctionComponent, useState } from \"react\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { Region, useAvailableRegions } from \"../facade/fetchData\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { useAddRegion } from \"../facade/RegionStorage\";\n\nconst useStyles = makeStyles((theme) => ( {\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${ theme.spacing(4) }px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '20ch',\n      '&:focus': {\n        width: '30ch',\n      },\n    },\n  },\n} ));\n\ninterface Props {\n  showAdministerDialog: () => void;\n}\n\nexport const TopBar: FunctionComponent<Props> = ({showAdministerDialog}) => {\n  const classes = useStyles();\n  const { data: regions } = useAvailableRegions()\n  const { mutateAsync: addRegion } = useAddRegion();\n  const [query, setQuery] = useState(\"\");\n  const loadedRegions = regions ?? [];\n\n  async function onSelectRegion(region: Region | null): Promise<void> {\n    setQuery('');\n    if (region !== null) {\n      await addRegion(region);\n    }\n  }\n\n  return <div className={ classes.root }>\n    <AppBar>\n      <Toolbar>\n        <Typography variant=\"h6\" noWrap className={ classes.title }>\n          COVID Historie\n        </Typography>\n        <div className={ classes.search }>\n          <div className={ classes.searchIcon }>\n            <SearchIcon/>\n          </div>\n          <Autocomplete\n            id=\"rs-select\"\n            style={ { width: 300 } }\n            inputValue={query}\n            disableListWrap\n            getOptionLabel={ option => option.name }\n            options={ loadedRegions }\n            clearOnBlur={true}\n            onChange={ async (_event: any, value: any) => onSelectRegion(value) }\n            renderInput={ (params) => {\n              const { InputLabelProps, InputProps, ...rest } = params;\n              return <InputBase\n                placeholder=\"Kreis hinzufügen…\"\n                onChange={ (e): void => setQuery(e.target.value) }\n                { ...params.InputProps } { ...rest }\n                classes={ {\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                } }\n              />;\n            } }\n            renderOption={ (option) => <Typography noWrap>{ option.name }</Typography> }\n          />\n        </div>\n        <IconButton aria-label=\"display more actions\" edge=\"end\" color=\"inherit\" onClick={showAdministerDialog}>\n          <SettingsIcon/>\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  </div>\n}\n","import { createStyles, makeStyles } from \"@material-ui/core\";\nimport React, { FunctionComponent } from \"react\";\nimport {\n  HorizontalGridLines, LabelSeries,\n  VerticalBarSeries,\n  VerticalGridLines,\n  XAxis,\n  XYPlot,\n  YAxis\n} from \"react-vis\";\nimport { useRegion } from \"../facade/fetchData\";\nimport '../../node_modules/react-vis/dist/style.css';\n\ninterface Props {\n  rs: string;\n}\n\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    body: {\n      padding: 5\n    }\n  })\n);\n\nfunction formatDiff(diff: number | undefined): string {\n  if (diff === undefined || diff === 0) {\n    return \"\";\n  }\n  return diff > 0 ? `+${diff}` : `-${Math.abs(diff)}`;\n}\n\nconst colors = [\"\", \"#fefac0\", \"#f6c97a\", \"#ec925b\", \"#dc543f\", \"#ac3135\"]\nfunction colorFor(incidence: number): number {\n\n  if (incidence > 200) {\n    return 5;\n  }\n  if (incidence > 100) {\n    return 4;\n  }\n  if (incidence > 50) {\n    return 3;\n  }\n  if (incidence > 35) {\n    return 2;\n  }\n  return 1;\n}\n\nexport const Region: FunctionComponent<Props> = ({ rs }) => {\n  const classes = useStyles();\n  const { data: regionData } = useRegion(rs)\n  if (!regionData) {\n    return null;\n  }\n\n  const screenWidth = window.innerWidth - 20;\n  const entries = regionData.entries\n    .slice(regionData.entries.length - 10, regionData.entries.length)\n    .map(day => ({...day, date: day.date.split(\".\").slice(0, 2).join(\".\")}));\n  const graphData = entries\n    .map(day => ({x: day.date, y: day.incidence, color: colorFor(day.incidence)}));\n  const casesLabelsData = entries.map((day) => ({x: day.date as any, y: day.incidence + 15, label: formatDiff(day.casesDiff)}))\n  const incidenceLabelsData = entries.map((day) => ({x: day.date as any, y: 0, label: `${Math.ceil(day.incidence)}`}))\n\n  return <div className={classes.body}>\n    <h3>{ regionData.name }</h3>\n\n    <XYPlot height={ 250 } width={ screenWidth } xType=\"ordinal\">\n      <VerticalGridLines />\n      <HorizontalGridLines />\n      <XAxis />\n      <YAxis />\n      <VerticalBarSeries colorType=\"log\" data={graphData}  barWidth={0.8} colorRange={colors} colorDomain={[0, 1, 2, 3, 4]}/>\n      <LabelSeries data={casesLabelsData} xType=\"ordinal\" labelAnchorX=\"middle\"/>\n      <LabelSeries data={incidenceLabelsData} xType=\"ordinal\" labelAnchorX=\"middle\"/>\n    </XYPlot>\n  </div>\n}\n","import CircularProgress from \"@material-ui/core/CircularProgress\";\nimport React, { FunctionComponent } from \"react\";\nimport { useAvailableRegions } from \"../facade/fetchData\";\nimport { useUserRegions } from \"../facade/RegionStorage\";\nimport { Region } from \"./Region\";\n\nexport const RegionList: FunctionComponent = () => {\n  const { data: availableRegions } = useAvailableRegions()\n  const {data: savedRegions } = useUserRegions();\n  if (!availableRegions || !savedRegions) {\n    return <CircularProgress/>\n  }\n\n\n  const regionsToDisplay = savedRegions.filter(rs => availableRegions.some(region => region.rs === rs));\n\n  const regions = regionsToDisplay.map(rs => <Region key={`region_${rs}`} rs={rs}/>)\n  return <div>{regions}</div>\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport React, { FunctionComponent, useState } from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { AdministerRegionsDialog } from \"./administerRegions/AdministerRegionsDialog\";\nimport { TopBar } from \"./topBar/TopBar\";\nimport { RegionList } from \"./region/RegionList\";\n\nconst queryClient = new QueryClient()\n\nconst useStyles = makeStyles(() => ( {\n    body: {\n      margin: 10,\n      marginTop: 50\n    },\n    footer: {\n      fontSize: '0.5m'\n    }\n  }\n))\n\nexport const App: FunctionComponent = () => {\n  const classes = useStyles();\n  const [showAdministerDialog, setShowAdministerDialog] = useState(false);\n\n  function renderAdministerDialog() {\n    return showAdministerDialog ? <AdministerRegionsDialog onClose={ () => setShowAdministerDialog(false) }/> : null\n  }\n\n  return (\n    <QueryClientProvider client={ queryClient }>\n      { renderAdministerDialog() }\n      <TopBar showAdministerDialog={ () => setShowAdministerDialog(true) }/>\n      <div className={ classes.body }>\n        <div>\n          <RegionList/>\n        </div>\n        <p className={classes.footer}>\n          Die auf dieser Seite angezeigten Daten stammen vom <a\n          href=\"https://npgeo-corona-npgeo-de.hub.arcgis.com/datasets/917fc37a709542548cc3be077a786c17_0/geoservice?geometry=-30.849%2C46.211%2C52.867%2C55.839\"\n          target=\"_blank\">RKI</a>.\n        </p>\n      </div>\n    </QueryClientProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register({\n  onUpdate: registration => {\n    if (registration && registration.waiting) {\n      registration.waiting.postMessage({ type: 'SKIP_WAITING' });\n    }\n    window.location.reload();\n  }\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}